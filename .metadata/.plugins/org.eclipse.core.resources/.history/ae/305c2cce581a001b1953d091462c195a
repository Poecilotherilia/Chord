package com.Net;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.SocketException;

public class Sever implements Runnable{
	DatagramSocket ds;
	DatagramPacket dp;
	byte [] bbuf = new byte [1024];
	
	public Sever() throws Exception {
		ds = new DatagramSocket(8090);
		dp = new DatagramPacket(bbuf,bbuf.length);
	}
	
	public void run() {
		while(true) {
			try {
				ds.receive(dp);
				System.out.println("ip::"+dp.getAddress().getHostAddress()+"\nport::"+dp.getPort()+"\ndata::"+new String(dp.getData()));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	private void receive() throws Exception { 
        /**1、建立udp socket，设置接收端口*/
        
        DatagramSocket ds = new DatagramSocket(8090);

        /**2、预先创建数据存放的位置，封装*/
        	byte [] bbuf = new byte [1024];
         DatagramPacket dp = new DatagramPacket(bbuf,bbuf.length);
         
         /**3、使用receive阻塞式接收*/
         ds.receive(dp);
          
         System.out.println("ip::"+dp.getAddress().getHostAddress()+"\nport::"+dp.getPort()+"\ndata::"+new String(dp.getData()));
         ds.receive(dp);
          
         System.out.println("ip::"+dp.getAddress().getHostAddress()+"\nport::"+dp.getPort()+"\ndata::"+new String(dp.getData()));
         
         ds.receive(dp);
          
         System.out.println("ip::"+dp.getAddress().getHostAddress()+"\nport::"+dp.getPort()+"\ndata::"+new String(dp.getData()));
         
         ds.receive(dp);
          
         System.out.println("ip::"+dp.getAddress().getHostAddress()+"\nport::"+dp.getPort()+"\ndata::"+new String(dp.getData()));
         
         /**4、关闭资源*/
         ds.close();
}
}
